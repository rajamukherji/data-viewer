-- ROOT --

PLATFORM := defined("PLATFORM") or shell("uname"):trim
DEBUG := defined("DEBUG")
PREFIX := file(defined("PREFIX") or "/usr/local")

INSTALL := meta("install")

pkgconfig := fun(Args) do
	expr('pkg-config {Args}') => fun() shell("pkg-config", Args):trim
end

CFLAGS := []
LDFLAGS := []
PREBUILDS := []

c_compile := fun(Object) do
	var Source := Object % "c"
	execute('gcc -c {CFLAGS} -o{Object} {Source}')
end

c_includes := fun(Target) do
	var Files := []
	var Lines := shell('gcc -c {CFLAGS} -M -MG {Target:source}')
	var Files := Lines:trim:replace(r"\\\n ", "") / r"[^\\]( +)"
	Files:pop
	for File in Files do
		File := file(File:replace(r"\\ ", " "))
	end
	return Files
end

SourceTypes := {
	"c" is [c_includes, c_compile]
}

c_program := fun(Executable, Objects, Libraries) do
	Objects := Objects or []
	Libraries := Libraries or []
	var Sources := []
	for Object in Objects do
		for Extension, Functions in SourceTypes do
			var Source := Object % Extension
			if Source:exists then
				Sources:put(Source)
				var Scan := Source:scan("INCLUDES", :true)[PREBUILDS] => Functions[1]
				Object[Source, Scan] => Functions[2]
				exit
			end
		end
	end
	Executable[Objects, Libraries] => fun(Executable) do
		execute('gcc', '-o', Executable, Objects, Libraries, LDFLAGS)
		DEBUG or execute('strip', Executable)
	end
	DEFAULT[Executable]
end

install := fun(Source, Target, Mode) do
	print(Source, " -> ", Target, "\n")
	Target[Source] => fun(Target) do
		Target:dir:mkdir
		Source:copy(Target)
		Mode and execute("chmod", Mode, Target)
	end
	INSTALL[Target]
end

BIN_DIR := file("bin"):mkdir
SHARE_DIR := file("share"):mkdir

for var File in file("share/data-viewer"):ls do
	install(File, PREFIX/'share/data-viewer/{File:basename}')
end

vmount("obj", "src")
subdir("obj")

defined("USE_GL") and scope("USE_GL";) do
	USE_GL := 1
	vmount("obj_gl", "src")
	subdir("obj_gl")
end


